/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package StandardSeries.Bars;

import com.steema.teechart.TChart;
import com.steema.teechart.drawing.Color;
import com.steema.teechart.drawing.DashStyle;
import com.steema.teechart.drawing.StringAlignment;
import com.steema.teechart.editors.ChartEditor;
import com.steema.teechart.events.ChartDrawEvent;
import com.steema.teechart.events.ChartPaintAdapter;
import com.steema.teechart.legend.LegendAlignment;
import com.steema.teechart.styles.Calendar;
import com.steema.teechart.styles.Calendar.CalendarChangeListener;
import com.steema.teechart.styles.HorizBar;
import com.steema.teechart.styles.MarksStyle;
import com.steema.teechart.styles.MultiBars;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Random;

/**
 *
 * @author norike
 */
public class ServerStatus extends javax.swing.JPanel {

    /**
     * Creates new form ServerStatus
     */
    public ServerStatus() {
        initComponents();
        
        createCharts();
        initCharts();        
        setEditors();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlChart1 = new javax.swing.JPanel();
        pnlChart2 = new javax.swing.JPanel();
        pnlChart3 = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        pnlChart1.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        add(pnlChart1, gridBagConstraints);

        pnlChart2.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        add(pnlChart2, gridBagConstraints);

        pnlChart3.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        add(pnlChart3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlChart1;
    private javax.swing.JPanel pnlChart2;
    private javax.swing.JPanel pnlChart3;
    // End of variables declaration//GEN-END:variables

    protected TChart tChart1, tChart2, tChart3;
    
    private void createCharts() {
        tChart1 = new TChart();
        tChart2 = new TChart();
        tChart3 = new TChart();
        
        pnlChart1.add(tChart1);
        pnlChart2.add(tChart2);
        pnlChart3.add(tChart3);
    }

    private void initCharts() {
        initChart1();
        initChart2();
        initChart3();
    }

    private void setEditors() {
        setEditor(tChart1);
        setEditor(tChart2);
        setEditor(tChart3);
    }

    private void setEditor(TChart chart) {
        chart.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                 if (e.getClickCount()==2) {
                    ChartEditor.editChart(chart.getChart());
                }
            }
        });
    }

    private void initChart1() {
        tChart1.getPanel().getGradient().setVisible(false);
        tChart1.getWalls().setVisible(false);
        tChart1.getHeader().setAutoSize(false);
        tChart1.getHeader().getFont().setColor(Color.GRAY);
        tChart1.getHeader().getFont().setSize(25);
        tChart1.getHeader().getFont().setName("Segoe UI");
        tChart1.getHeader().getPen().setColor(new Color(128, 128, 128));
        tChart1.getHeader().getPen().setWidth(0);
        tChart1.getHeader().getPen().setStyle(DashStyle.DOT);
        tChart1.getHeader().getShadow().setVisible(false);
        tChart1.getHeader().setText("Server Status");
        tChart1.getHeader().setTransparent(false);
        tChart1.getHeader().setAdjustFrame(false);
        tChart1.getHeader().getBrush().setTransparency(100);
        tChart1.getAxes().getBottom().setVisible(false);
        tChart1.getAxes().getBottom().setMinimumOffset(5);
        tChart1.getAxes().getBottom().setMaximumOffset(5);
        tChart1.getAxes().getLeft().setVisible(false);
        tChart1.getLegend().setVisible(false);
        tChart1.getAspect().setView3D(false);
        tChart1.getPanel().setColor(Color.WHITE);
        
        HorizBar horizBar1 = new HorizBar(tChart1.getChart());
        horizBar1.getPen().setTransparency(50);
        horizBar1.getPen().setStyle(DashStyle.DASH);
        horizBar1.getPen().setColor(new Color(128, 128, 128));
        horizBar1.getMarks().setVisible(false);
        horizBar1.setColor(Color.WHITE);
        horizBar1.setBarHeightPercent(59);
        horizBar1.setMultiBar(MultiBars.NONE);
        
        for (int i=0; i<5; i++) {
            horizBar1.add(100);
        }
        
        HorizBar horizBar2 = new HorizBar(tChart1.getChart());
        horizBar2.getPen().setVisible(false);
        horizBar2.setColorEach(true);
        horizBar2.getMarks().getFont().setColor(Color.WHITE);
        horizBar2.getMarks().getFont().setName("Segoe UI");
        horizBar2.getMarks().getFont().setBold(true);
        horizBar2.getMarks().setTransparent(true);
        horizBar2.getMarks().setStyle(MarksStyle.PERCENT);
        horizBar2.getMarks().getArrow().setVisible(false);
        horizBar2.getMarks().getCallout().getArrow().setVisible(false);
        horizBar2.getMarks().getCallout().setLength(-57);
        horizBar2.setBarHeightPercent(55);
        horizBar2.setMultiBar(MultiBars.NONE);
        horizBar2.add(new double[] {60, 85, 40, 55, 50});
        
        tChart1.addChartPaintListener(new ChartPaintAdapter() {
            
            @Override
            public void chartPainted(ChartDrawEvent e) {
                tChart1.getGraphics3D().getFont().setColor(Color.BLACK);
                tChart1.getGraphics3D().getFont().setBold(false);
                int XPos = tChart1.getChart().getChartRect().getLeft() + 5;
                tChart1.getGraphics3D().textOut(XPos, horizBar1.calcYPos(5) - 16, "Memory Usage");
                tChart1.getGraphics3D().textOut(XPos, horizBar1.calcYPos(4) - 16, "CPU usage");
                tChart1.getGraphics3D().textOut(XPos, horizBar1.calcYPos(3) - 16, "Storage space");
                tChart1.getGraphics3D().textOut(XPos, horizBar1.calcYPos(2) - 16, "Apps installed");
                tChart1.getGraphics3D().textOut(XPos, horizBar1.calcYPos(1) - 16, "Bandwidth");
            }
        });
    }

    private void initChart2() {
        tChart2.getPanel().getGradient().setVisible(false);        
        tChart2.getPanel().setColor(Color.WHITE);
        tChart2.getWalls().setVisible(false);
        tChart2.getHeader().setVisible(false);
        
        Calendar calendar1 = new Calendar(tChart2.getChart());
        calendar1.getPen().setVisible(false);
        calendar1.getMonths().getFont().setSize(13);
        calendar1.getMonths().getFont().setName("Segoe UI");
        calendar1.getSunday().setColor(new Color(68, 102, 163));
        calendar1.getSunday().getPen().setVisible(false);
        calendar1.getToday().setColor(new Color(227, 28, 33));
        calendar1.getToday().getPen().setVisible(false);
        calendar1.getTrailing().getFont().setColor(Color.GRAY);
        calendar1.getWeekDays().setColor(new Color(204, 204, 255));
        calendar1.getWeekDays().setTransparent(false);
        calendar1.getWeekDays().getPen().setVisible(false);
        calendar1.getPreviousMonthButton().setVisible(true);
        calendar1.getPreviousMonthButton().setBackground(Color.WHITE);
        calendar1.getPreviousMonthButton().setBorderPainted(false);
        calendar1.getPreviousMonthButton().setFocusPainted(false);
        calendar1.getNextMonthButton().setVisible(true);
        calendar1.getNextMonthButton().setBackground(Color.WHITE);
        calendar1.getNextMonthButton().setBorderPainted(false);
        calendar1.getNextMonthButton().setFocusPainted(false);
        
        calendar1.addCalendarChangeListener(new CalendarChangeListener() {

            @Override
            public void seriesChanged(Calendar.CalendarChangeEvent e) {
                
                Random rnd1 = new Random();
                
                for (int i=0; i<tChart1.getSeries(1).getCount(); i++) {
                    tChart1.getSeries(1).getXValues().setValue(i, rnd1.nextInt(100));
                }
                
                for (int i=0; i<tChart3.getSeriesCount(); i++) {
                    for (int j=0; j<tChart3.getSeries(i).getCount(); j++) {
                        tChart3.getSeries(i).getXValues().setValue(j, rnd1.nextInt(1000));
                    }
                }
                
                tChart1.refreshControl();
                tChart3.refreshControl();
                
            }
        });
    }

    private void initChart3() {
        tChart3.getPanel().getGradient().setVisible(false);
        tChart3.getWalls().setVisible(false);
        tChart3.getHeader().setAlignment(StringAlignment.NEAR);
        tChart3.getHeader().getFont().setColor(Color.GRAY);
        tChart3.getHeader().getFont().setSize(16);
        tChart3.getHeader().getFont().setName("Segoe UI");
        tChart3.getHeader().setText("Active Servers");
        tChart3.getAxes().getBottom().getAxisPen().setColor(new Color(64, 64, 64));
        tChart3.getAxes().getBottom().getGrid().setColor(new Color(169, 169, 169));
        tChart3.getAxes().getBottom().getLabels().getFont().setColor(Color.GRAY);
        tChart3.getAxes().getBottom().getLabels().getFont().setName("Segoe UI");
        tChart3.getAxes().getBottom().getTicksInner().setColor(new Color(169, 169, 169));
        tChart3.getAxes().getLeft().getAxisPen().setVisible(false);
        tChart3.getAxes().getLeft().getGrid().setVisible(false);
        tChart3.getAxes().getLeft().getLabels().getFont().setColor(Color.GRAY);
        tChart3.getAxes().getLeft().getLabels().getFont().setName("Segoe UI");
        tChart3.getAxes().getLeft().getMinorTicks().setVisible(false);
        tChart3.getAxes().getLeft().getTicks().setTransparency(100);
        tChart3.getAxes().getLeft().getTicksInner().setColor(new Color(169, 169, 169));
        tChart3.getAxes().getLeft().setMinimumOffset(15);
        tChart3.getAxes().getLeft().setMaximumOffset(15);
        tChart3.getLegend().setAlignment(LegendAlignment.BOTTOM);
        tChart3.getLegend().getFont().setName("Verdana");
        tChart3.getLegend().setTransparent(true);
        tChart3.getAspect().setView3D(false);
        tChart3.getPanel().setColor(Color.WHITE);
  
        HorizBar horizBar1 = new HorizBar(tChart3.getChart());
        horizBar1.setBarHeightPercent(55);
        horizBar1.getPen().setColor(horizBar1.getColor());
        horizBar1.getMarks().setVisible(false);
        horizBar1.setTitle("Server 1");
        horizBar1.fillSampleValues(3);
        horizBar1.setSideMargins(false);
        
        HorizBar horizBar2 = new HorizBar(tChart3.getChart());
        horizBar2.setBarHeightPercent(55);
        horizBar2.getPen().setColor(horizBar2.getColor());
        horizBar2.getMarks().setVisible(false);
        horizBar2.setTitle("Server 2");
        horizBar2.fillSampleValues(3);
        horizBar2.setSideMargins(false);
        
        HorizBar horizBar3 = new HorizBar(tChart3.getChart());
        horizBar3.setBarHeightPercent(55);
        horizBar3.getPen().setColor(horizBar3.getColor());
        horizBar3.getMarks().setVisible(false);
        horizBar3.setTitle("Server 3");
        horizBar3.fillSampleValues(3);
        horizBar3.setSideMargins(false);
        
        horizBar1.getLabels().setString(0, "Speed");
        horizBar1.getLabels().setString(1, "Time");
        horizBar1.getLabels().setString(2, "Visitors");
    }

}
