/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package StandardSeries.Bars;

import com.steema.teechart.TChart;
import com.steema.teechart.axis.Axis;
import com.steema.teechart.axis.AxisLabelAdapter;
import com.steema.teechart.axis.AxisLabelResolver;
import com.steema.teechart.axis.NextAxisLabelValue;
import com.steema.teechart.drawing.Color;
import com.steema.teechart.drawing.StringAlignment;
import com.steema.teechart.editors.ChartEditor;
import com.steema.teechart.events.ScrollModEventArgs;
import com.steema.teechart.legend.LegendAlignment;
import com.steema.teechart.styles.Bar;
import com.steema.teechart.styles.ISeries;
import com.steema.teechart.styles.MarksStyle;
import com.steema.teechart.styles.MultiBars;
import com.steema.teechart.styles.Series;
import com.steema.teechart.styles.Series.MarkTextResolver;
import com.steema.teechart.styles.StringList;
import com.steema.teechart.styles.VerticalAxis;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author norike
 */
public class StackedBars extends javax.swing.JPanel {

    /**
     * Creates new form StackedBars
     */
    public StackedBars() {
        initComponents();
        
        createChart();
        initChart();        
        setEditor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    protected TChart tChart1;
    
    private void createChart() {
        tChart1 = new TChart();
        add(tChart1);
    }

    private void initChart() {
        tChart1.getWalls().setVisible(false);
        tChart1.getPanel().getGradient().setVisible(false);
        tChart1.getFooter().setAlignment(StringAlignment.NEAR);
        tChart1.getFooter().setLeft(17);
        tChart1.getFooter().getFont().setColor(Color.BLACK);
        tChart1.getFooter().getFont().setItalic(true);
        tChart1.getFooter().getFont().setName("Segoe UI");
        tChart1.getFooter().setText("Source : BI Intelligence estimates, Interactive Advertising Bureau");
        tChart1.getSubHeader().getFont().setColor(Color.GRAY);
        tChart1.getSubHeader().getFont().setName("Segoe UI");
        tChart1.getSubHeader().setText("Desktop and Mobile");
        tChart1.getHeader().getFont().setColor(Color.GRAY);
        tChart1.getHeader().getFont().setSize(24);
        tChart1.getHeader().getFont().setName("Segoe UI");
        tChart1.getHeader().setText("Native Advertising Revenue (US)");
        tChart1.getAxes().getBottom().getAxisPen().setColor(new Color(64, 64, 64));
        tChart1.getAxes().getBottom().getGrid().setColor(new Color(169, 169, 169));
        tChart1.getAxes().getBottom().getLabels().getFont().setName("Verdana");
        tChart1.getAxes().getBottom().getTicksInner().setColor(new Color(169, 169, 169));
        tChart1.getAxes().getRight().getAxisPen().setColor(new Color(64, 64, 64));
        tChart1.getAxes().getRight().getAxisPen().setWidth(1);
        tChart1.getAxes().getRight().getGrid().setVisible(false);
        tChart1.getAxes().getRight().setIncrement(5);
        tChart1.getAxes().getRight().getLabels().getFont().setName("Verdana");
        tChart1.getAxes().getRight().getMinorTicks().setVisible(false);
        tChart1.getAxes().getRight().getTicksInner().setColor(new Color(169, 169, 169));
        tChart1.getAxes().getRight().getTitle().setCaption("Billions");
        tChart1.getAxes().getRight().getTitle().getFont().setName("Verdana");
        tChart1.getLegend().setAlignment(LegendAlignment.TOP);
        tChart1.getLegend().getFont().setName("Verdana");
        tChart1.getLegend().setTransparent(true);
        tChart1.getAspect().setView3D(false);
        tChart1.getPanel().setColor(Color.WHITE);
        
        StringList labels = new StringList(new String[]{"2013", "2014", "2015", "2016", "2017", "2018"});
        double[][] values = new double[3][];
        values[0] = new double[]{1, 1.3, 1.9, 2.7, 3.9, 5.7};
        values[1] = new double[]{0.8, 1, 1.3, 2, 2.7, 3.4};
        values[2] = new double[]{2.9, 5.6, 7.5, 9.2, 10.7, 11.9};
        
        MarkTextResolver marksResolver = new MarkTextResolver() {
            @Override
            public String getMarkText(int valueIndex, String markText) {
                return markText + " $";
            }
        };
        
        for (int i=0; i<3; i++) {
            Bar bar = new Bar(tChart1.getChart());
            bar.getPen().setVisible(false);
            bar.getMarks().setTransparent(true);
            bar.getMarks().getArrow().setVisible(false);
            bar.getMarks().getCallout().setLength(-14);
            bar.getMarks().setStyle(MarksStyle.VALUE);
            bar.setMarkTextResolver(marksResolver);
            bar.setMultiBar(MultiBars.STACKED);
            bar.add(values[i]);
            bar.setLabels(labels);
            bar.setVerticalAxis(VerticalAxis.RIGHT);
        }
        
        tChart1.getSeries(0).setTitle("Native-Style Display");
        tChart1.getSeries(1).setTitle("Sponsorship");
        tChart1.getSeries(2).setTitle("Social");
        
        tChart1.setAxisLabelResolver(new AxisLabelAdapter() {

            @Override
            public String getLabel(Axis axis, ISeries s, int valueIndex, String labelText) {
                String result = labelText;
                if (axis == tChart1.getAxes().getRight()) {
                    result += " $";
                }
                return result;
            }
        });
    }

    private void setEditor() {
        tChart1.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                 if (e.getClickCount()==2) {
                    ChartEditor.editChart(tChart1.getChart());
                }
            }
        });
    }
    
}
