/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package StandardSeries.PieAndDonut;

import com.steema.teechart.TChart;
import com.steema.teechart.drawing.Color;
import com.steema.teechart.editors.ChartEditor;
import com.steema.teechart.events.ChartDrawEvent;
import com.steema.teechart.events.ChartPaintAdapter;
import com.steema.teechart.legend.LegendAlignment;
import com.steema.teechart.legend.LegendStyle;
import com.steema.teechart.styles.BarStyle;
import com.steema.teechart.styles.ColorList;
import com.steema.teechart.styles.Donut;
import com.steema.teechart.styles.HorizBar;
import com.steema.teechart.styles.MarksStyle;
import com.steema.teechart.styles.Series;
import com.steema.teechart.styles.StringList;
import com.steema.teechart.tools.Annotation;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Arrays;

/**
 *
 * @author norike
 */
public class MultiDonut extends javax.swing.JPanel {

    /**
     * Creates new form MultiDonut
     */
    public MultiDonut() {
        initComponents();
        
        createCharts();
        initCharts();        
        setEditors();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlTop = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlCharts = new javax.swing.JPanel();
        pnlChart1 = new javax.swing.JPanel();
        pnlChart2 = new javax.swing.JPanel();
        pnlChart3 = new javax.swing.JPanel();
        pnlChart4 = new javax.swing.JPanel();
        pnlChart5 = new javax.swing.JPanel();
        pnlBottom = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        pnlTop.setBackground(new java.awt.Color(255, 255, 255));
        pnlTop.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Meiryo UI", 0, 14)); // NOI18N
        jLabel1.setText("Where do customers watch mobile video content ?");
        jLabel1.setToolTipText("");
        pnlTop.add(jLabel1, java.awt.BorderLayout.CENTER);

        pnlCharts.setLayout(new java.awt.GridBagLayout());

        pnlChart1.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlCharts.add(pnlChart1, gridBagConstraints);

        pnlChart2.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        pnlCharts.add(pnlChart2, gridBagConstraints);

        pnlChart3.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        pnlCharts.add(pnlChart3, gridBagConstraints);

        pnlChart4.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        pnlCharts.add(pnlChart4, gridBagConstraints);

        pnlChart5.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        pnlCharts.add(pnlChart5, gridBagConstraints);

        pnlBottom.setBackground(new java.awt.Color(255, 255, 255));
        pnlBottom.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 11)); // NOI18N
        jLabel2.setText("Ericson consumerLab.   2014");
        pnlBottom.add(jLabel2, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
            .addComponent(pnlCharts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTop, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(pnlCharts, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlChart1;
    private javax.swing.JPanel pnlChart2;
    private javax.swing.JPanel pnlChart3;
    private javax.swing.JPanel pnlChart4;
    private javax.swing.JPanel pnlChart5;
    private javax.swing.JPanel pnlCharts;
    private javax.swing.JPanel pnlTop;
    // End of variables declaration//GEN-END:variables

    protected TChart tChart1, tChart2, tChart3, tChart4, tChart5;
    protected String[] titles = new String[]{"LATE AT NIGHT IN BED",
        "WHILE COMMUTING", "WHILE HAVING DINNER", "WHILE SHOPPING"};
    protected Color[] colors = new Color[]{new Color(249, 205, 32),
        new Color(243, 146, 37), new Color(249, 205, 32),
        new Color(243, 146, 37)};
    protected ColorList colorList = new ColorList(4);
            
    private void createCharts() {
        tChart1 = new TChart();
        pnlChart1.add(tChart1);
        
        tChart2 = new TChart();
        pnlChart2.add(tChart2);
        
        tChart3 = new TChart();
        pnlChart3.add(tChart3);
        
        tChart4 = new TChart();
        pnlChart4.add(tChart4);
        
        tChart5 = new TChart();
        pnlChart5.add(tChart5);
    }

    private void initCharts() {
        colorList.addAll(Arrays.asList(colors));
        initChart1();
        initChart2();
        initChart3();
        initChart4();
        initChart5();
    }

    private void setEditors() {
        setEditor(tChart1);
        setEditor(tChart2);
        setEditor(tChart3);
        setEditor(tChart4);
        setEditor(tChart5);
    }
    
    private void setEditor(TChart chart) {
        chart.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                 if (e.getClickCount()==2) {
                    ChartEditor.editChart(chart.getChart());
                }
            }
        });
    }

    private void initChart1() {
        initPie(tChart1);
        tChart1.getFooter().setText(titles[0]);
        tChart1.getSeries(0).add(60, new Color(215, 215, 215));
        tChart1.getSeries(0).add(40, "%", colors[0]);
        tChart1.getLegend().getFont().setColor(tChart1.getSeries(0).getColors().getColor(1));
        ((Annotation)tChart1.getTools().getTool(0)).getShape().getBrush().loadImage(getClass().getResource("/Resources/sleeping-bag.png"));
    }

    private void initChart2() {
        initPie(tChart2);
        tChart2.getFooter().setText(titles[1]);
        tChart2.getSeries(0).add(75, new Color(215, 215, 215));
        tChart2.getSeries(0).add(25, "%", colors[1]);
        tChart2.getLegend().getFont().setColor(tChart2.getSeries(0).getColors().getColor(1));
        ((Annotation)tChart2.getTools().getTool(0)).getShape().getBrush().loadImage(getClass().getResource("/Resources/bus.png"));
    }

    private void initChart3() {
        initPie(tChart3);
        tChart3.getFooter().setText(titles[2]);
        tChart3.getSeries(0).add(77, new Color(215, 215, 215));
        tChart3.getSeries(0).add(23, "%", colors[2]);
        tChart3.getLegend().getFont().setColor(tChart3.getSeries(0).getColors().getColor(1));
        ((Annotation)tChart3.getTools().getTool(0)).getShape().getBrush().loadImage(getClass().getResource("/Resources/restaurant.png"));
    }

    private void initChart4() {
        initPie(tChart4);
        tChart4.getFooter().setText(titles[3]);
        tChart4.getSeries(0).add(80, new Color(215, 215, 215));
        tChart4.getSeries(0).add(20, "%", colors[3]);
        tChart4.getLegend().getFont().setColor(tChart4.getSeries(0).getColors().getColor(1));
        ((Annotation)tChart4.getTools().getTool(0)).getShape().getBrush().loadImage(getClass().getResource("/Resources/percent-badge.png"));
    }

    private void initPie(TChart chart) {
        chart.getPanel().getGradient().setVisible(false);
        chart.getFooter().getFont().setColor(Color.GRAY);
        chart.getFooter().getFont().setSize(16);
        chart.getFooter().getFont().setName("Segoe UI");
        chart.getFooter().getFont().setBold(true);
        chart.getHeader().setVisible(false);
        chart.getLegend().setAlignment(LegendAlignment.BOTTOM);
        chart.getLegend().getFont().setSize(24);
        chart.getLegend().getFont().setName("Segoe UI");
        chart.getLegend().getFont().setBold(true);
        chart.getLegend().setLegendStyle(LegendStyle.LASTVALUES);
        chart.getLegend().getSymbol().setVisible(false);
        chart.getLegend().setTransparent(true);
        chart.getLegend().setVertSpacing(-10);
        chart.getAspect().setView3D(false);
        chart.getPanel().setColor(Color.WHITE);
        chart.getPanel().getPen().setVisible(true);
        chart.getPanel().getPen().setColor(Color.LIGHT_GRAY);
        
        Donut donut = new Donut(chart.getChart());
        donut.setCircled(true);
        donut.getMarks().setVisible(false);
        donut.getShadow().setVisible(false);
        donut.getPen().setColor(Color.WHITE);
        donut.getPen().setWidth(2);
        donut.setRotationAngle(91);
        donut.setDonutPercent(60);
        
        Annotation annot = new Annotation(chart.getChart());
        annot.getShape().getPen().setVisible(false);
        annot.getShape().getShadow().setVisible(false);
        annot.getShape().setCustomPosition(true);
        annot.setCustomSize(true);
        annot.setWidth(64);
        annot.setHeight(64);               
                
        chart.addChartPaintListener(new ChartPaintAdapter() {
            
            @Override
            public void axesPainting(ChartDrawEvent e) {
                int xPos = chart.getWidth() / 2;
                int yPos = chart.getChart().getChartRect().y + chart.getChart().getChartRect().height / 2; 
                annot.getShape().setLeft(xPos - 32);
                annot.getShape().setTop(yPos - 32);
            }
        });
    }
    
    private void initChart5() {
        tChart5.getPanel().getGradient().setVisible(false);
        tChart5.getWalls().setVisible(false);
        tChart5.getHeader().setVisible(false);
        tChart5.getAxes().getBottom().setVisible(false);
        tChart5.getAxes().getLeft().getAxisPen().setColor(Color.GRAY);
        tChart5.getAxes().getLeft().getAxisPen().setWidth(1);
        tChart5.getAxes().getLeft().getGrid().setVisible(false);
        tChart5.getAxes().getLeft().getLabels().getFont().setColor(Color.GRAY);
        tChart5.getAxes().getLeft().getLabels().getFont().setSize(16);
        tChart5.getAxes().getLeft().getLabels().getFont().setName("Segoe UI");
        tChart5.getAxes().getLeft().getMinorTicks().setVisible(false);
        tChart5.getAxes().getLeft().getTicksInner().setColor(new Color(169, 169, 169));
        tChart5.getLegend().setVisible(false);
        tChart5.getAspect().setView3D(false);
        tChart5.getPanel().setColor(Color.WHITE);
        
        HorizBar horizBar = new HorizBar(tChart5.getChart());
        horizBar.getPen().setVisible(false);
        horizBar.getMarks().getFont().setColor(Color.GRAY);
        horizBar.getMarks().setTransparent(true);
        horizBar.getMarks().setArrowLength(8);
        horizBar.getMarks().setStyle(MarksStyle.VALUE);
        horizBar.setBarStyle(BarStyle.ROUNDRECTANGLE);
        horizBar.setBarHeightPercent(99);
        horizBar.add(new double[]{40, 25, 23, 20});
        horizBar.setLabels(new StringList(titles));
        horizBar.setColors(colorList);
        
        horizBar.setMarkTextResolver(new Series.MarkTextResolver() {

            @Override
            public String getMarkText(int valueIndex, String markText) {
                return markText + " %";
            }
        });
    }
}
